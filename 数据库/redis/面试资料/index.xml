<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试资料 on DocDock Documentation</title>
    <link>/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/</link>
    <description>Recent content in 面试资料 on DocDock Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>redis面试题</title>
      <link>/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/redis%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/%E6%95%B0%E6%8D%AE%E5%BA%93/redis/%E9%9D%A2%E8%AF%95%E8%B5%84%E6%96%99/redis%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>redis面试题 60个Redis重要的知识点，能命中大多数的Redis面试题 1 Redis 是一个基于内存的高性能key-value数据库。 2 Redis相比memcached有哪些优势： memcached所有的值均是简单的字符串，redis作为其替代者，支持更为丰富的数据类型 redis的速度比memcached快很多 redis可以持久化其数据 3.Redis是单线程 redis利用队列技术将并发访问变为串行访问，消除了传统数据库串行控制的开销 4.Reids常用5种数据类型 string list set sorted set hash 6.Reids6种淘汰策略： noeviction: 不删除策略, 达到最大内存限制时, 如果需要更多内存, 直接返回错误信息。大多数写命令都会导致占用更多的内存(有极少数会例外。 allkeys-lru: 所有key通用; 优先删除最近最少使用(less recently used ,LRU) 的 key。 volatile-lru: 只限于设置了 expire 的部分; 优先删除最近最少使用(less recently used ,LRU) 的 key。 allkeys-random: 所有key通用; 随机删除一部分 key。 volatile-random: 只限于设置了 expire 的部分; 随机删除一部分 key。 volatile-ttl: 只限于设置了 expire 的部分; 优先删除剩余时间(time to live,TTL) 短的key。
7.Redis的并发竞争问题如何解决? 单进程单线程模式，采用队列模式将并发访问变为串行访问。Redis本身没有锁的概念，Redis对于多个客户端连接并不存在竞争，利用setnx实现锁。
8.Redis是使用c语言开发的。 9.Redis前端启动命令 ./redis-server
10.Reids支持的语言： java、C、C#、C++、php、Node.js、Go等。 11.Redis 持久化方案： Rdb 和 Aof 12.</description>
    </item>
    
  </channel>
</rss>
